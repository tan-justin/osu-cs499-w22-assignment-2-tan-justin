{"ast":null,"code":"var _jsxFileName = \"/Users/justintan/Documents/GitHub/assignment-2-tan-justin/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React from 'react';\nimport { Routes, Route, Link, NavLink, useNavigate, useParams, Outlet } from 'react-router-dom';\nimport './App.css';\nimport Person from './data/people.json';\nimport Movies from './data/films.json';\nimport Worlds from './data/planets.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SideNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/people\",\n        element: /*#__PURE__*/_jsxDEV(People, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 40\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \":id\",\n          element: /*#__PURE__*/_jsxDEV(PeopleData, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/planets\",\n        element: /*#__PURE__*/_jsxDEV(Planets, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 41\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \":id\",\n          element: /*#__PURE__*/_jsxDEV(PlanetsData, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/films\",\n        element: /*#__PURE__*/_jsxDEV(Film, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 39\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \":id\",\n          element: /*#__PURE__*/_jsxDEV(FilmData, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nfunction Home() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello! Here, you can look up more information about your favorite Star Wars person, planet or film! Please select from the navbar!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Home;\n\nfunction People() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Displaying this Character from sidebar selection!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = People;\n\nfunction Planets() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Displaying this Planet from sidebar selection!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = Planets;\n\nfunction Film() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Displaying this Film from sidebar selection!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_c5 = Film;\n\nfunction PeopleData() {\n  _s();\n\n  const people_array = [];\n  const pageID = useParams();\n  const person = {};\n  Person.map = people_array; //for(let id of Object.keys(Person)){\n  //people_array.push(<li key = {id}>{Person[id]}</li>)\n  //}\n\n  if (pageID.id in Person[pageID.id]) {\n    person = Person[pageID.id];\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: Person[pageID.id].name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Height: \", Person[pageID.id].height]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Mass: \", Person[pageID.id].mass]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Hair Color: \", Person[pageID.id].hair_color]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Skin Color: \", Person[pageID.id].skin_color]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Eye Color: \", Person[pageID.id].eye_color]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Birth year: \", Person[pageID.id].birth_year]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Gender: \", Person[pageID.id].gender]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Home World: \", /*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: Person[pageID.id].homeworld\n        },\n        children: Person[pageID.id].homeworld\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Films: \", Person[pageID.id].films.map(value => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: value,\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this)\n      }, value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 7\n  }, this);\n} //<Planets to={Person[pageID.id].homeworld}>World</Planets>\n\n\n_s(PeopleData, \"HbdtthbHBLp1bebixc7wFnq/1Rk=\", false, function () {\n  return [useParams];\n});\n\n_c6 = PeopleData;\n\nfunction PlanetsData() {\n  _s2();\n\n  const planet_array = [];\n  const pageID = useParams();\n  const planet = {};\n  Worlds.map = planet_array; //for(let id of Object.keys(Person)){\n  //people_array.push(<li key = {id}>{Person[id]}</li>)\n  //}\n\n  if (pageID.id in Worlds[pageID.id]) {\n    planet = Worlds[pageID.id];\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: Worlds[pageID.id].name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Rotation Period: \", Worlds[pageID.id].rotation_period]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Orbital Period: \", Worlds[pageID.id].orbital_period]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Diameter: \", Worlds[pageID.id].diameter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Climate: \", Worlds[pageID.id].climate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Gravity: \", Worlds[pageID.id].gravity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Terrain: \", Worlds[pageID.id].terrain]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Surface Water: \", Worlds[pageID.id].surface_water]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Population: \", Worlds[pageID.id].population]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Residents: \", Worlds[pageID.id].residents.map(value => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: value,\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 29\n        }, this)\n      }, value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Films: \", Worlds[pageID.id].films.map(value => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: value,\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 29\n        }, this)\n      }, value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(PlanetsData, \"HbdtthbHBLp1bebixc7wFnq/1Rk=\", false, function () {\n  return [useParams];\n});\n\n_c7 = PlanetsData;\n\nfunction FilmData() {\n  _s3();\n\n  const films_array = [];\n  const pageID = useParams();\n  const films = {};\n  Movies.map = films_array; //for(let id of Object.keys(Person)){\n  //people_array.push(<li key = {id}>{Person[id]}</li>)\n  //}\n\n  if (pageID.id in Movies[pageID.id]) {\n    films = Movies[pageID.id];\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: Movies[pageID.id].title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Episode id: \", Movies[pageID.id].episode_id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Opening Crawl: \", Movies[pageID.id].opening_crawl]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Director: \", Movies[pageID.id].director]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Producer: \", Movies[pageID.id].producer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Release Date: \", Movies[pageID.id].release_date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Characters: \", Movies[pageID.id].characters.map(value => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: value,\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 23\n        }, this)\n      }, value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Planets: \", Movies[pageID.id].planets.map(value => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: value,\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 23\n        }, this)\n      }, value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(FilmData, \"HbdtthbHBLp1bebixc7wFnq/1Rk=\", false, function () {\n  return [useParams];\n});\n\n_c8 = FilmData;\n\nfunction Nav() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Star Wars Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/people\",\n      children: \"People\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/films\",\n      children: \"Films\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/planets\",\n      children: \"Planets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n\n_c9 = Nav;\n\nfunction Error() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This link does not exist, please hit back or choose from one of the options of the navbar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n}\n\n_c10 = Error;\n\nfunction SideNav() {\n  _s4();\n\n  const people_array = [];\n  const planet_array = [];\n  const films_array = [];\n  const pageID = useParams();\n\n  if ( /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/people\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 6\n  }, this)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.entries(Person).map(_ref => {\n        let [key, value] = _ref;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: value.url,\n            children: value.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n}\n\n_s4(SideNav, \"HbdtthbHBLp1bebixc7wFnq/1Rk=\", false, function () {\n  return [useParams];\n});\n\n_c11 = SideNav;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Home\");\n$RefreshReg$(_c3, \"People\");\n$RefreshReg$(_c4, \"Planets\");\n$RefreshReg$(_c5, \"Film\");\n$RefreshReg$(_c6, \"PeopleData\");\n$RefreshReg$(_c7, \"PlanetsData\");\n$RefreshReg$(_c8, \"FilmData\");\n$RefreshReg$(_c9, \"Nav\");\n$RefreshReg$(_c10, \"Error\");\n$RefreshReg$(_c11, \"SideNav\");","map":{"version":3,"sources":["/Users/justintan/Documents/GitHub/assignment-2-tan-justin/src/App.js"],"names":["React","Routes","Route","Link","NavLink","useNavigate","useParams","Outlet","Person","Movies","Worlds","App","Home","People","Planets","Film","PeopleData","people_array","pageID","person","map","id","name","height","mass","hair_color","skin_color","eye_color","birth_year","gender","pathname","homeworld","films","value","PlanetsData","planet_array","planet","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","residents","FilmData","films_array","title","episode_id","opening_crawl","director","producer","release_date","characters","planets","Nav","Error","SideNav","Object","entries","key","url"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Routes, Route, Link, NavLink, useNavigate, useParams, Outlet } from 'react-router-dom';\nimport './App.css';\nimport Person from './data/people.json';\nimport Movies from './data/films.json';\nimport Worlds from './data/planets.json';\n\nfunction App() {\n\n  return (\n    <div>\n      <Nav/>\n      <SideNav/>\n      <Routes>\n        <Route path=\"/\" element={<Home/>}/>\n        <Route path=\"/people\" element={<People/>}>\n          <Route path=\":id\" element={<PeopleData/>}/>\n        </Route>\n        <Route path=\"/planets\" element={<Planets/>}>\n          <Route path=\":id\" element={<PlanetsData/>}/>\n        </Route>\n        <Route path=\"/films\" element={<Film/>}>\n          <Route path=\":id\" element={<FilmData/>}/>\n        </Route>\n        <Route path=\"*\" element={<Error/>}/>\n      </Routes>\n    </div>\n  );\n}\n\n\n\nfunction Home(){\n  return(\n    <div>\n      <h1>Hello! Here, you can look up more information about your favorite Star Wars person, planet or film! Please select from the navbar!</h1>\n    </div>\n  );\n}\n\nfunction People(){\n  return(\n    <div>\n      <h1>Displaying this Character from sidebar selection!</h1>\n      <Outlet/>\n    </div>\n  )\n}\nfunction Planets(){\n  return(\n    <div>\n      <h1>Displaying this Planet from sidebar selection!</h1>\n      <Outlet/>\n    </div>\n  )\n}\nfunction Film(){\n  return(\n    <div>\n      <h1>Displaying this Film from sidebar selection!</h1>\n      <Outlet/>\n    </div>\n  )\n}\nfunction PeopleData(){\n\n  const people_array = [];\n  const pageID = useParams();\n  const person = {};\n  Person.map = people_array;\n  //for(let id of Object.keys(Person)){\n    //people_array.push(<li key = {id}>{Person[id]}</li>)\n  //}\n  if(pageID.id in Person[pageID.id]){\n    person = Person[pageID.id];\n  }\n  \n  return(\n      <div>\n          <h1>{Person[pageID.id].name}</h1>\n          <p>Height: {Person[pageID.id].height}</p>\n          <p>Mass: {Person[pageID.id].mass}</p>\n          <p>Hair Color: {Person[pageID.id].hair_color}</p>\n          <p>Skin Color: {Person[pageID.id].skin_color}</p>\n          <p>Eye Color: {Person[pageID.id].eye_color}</p>\n          <p>Birth year: {Person[pageID.id].birth_year}</p>\n          <p>Gender: {Person[pageID.id].gender}</p>\n          <p>Home World: <Link to={{pathname:Person[pageID.id].homeworld}}>{Person[pageID.id].homeworld}</Link></p>\n          <p>Films: {Person[pageID.id].films.map((value) => (\n            <li key={value}><Link to ={value}>{value}</Link></li>\n          ))}</p>\n      </div>   \n  );\n}\n//<Planets to={Person[pageID.id].homeworld}>World</Planets>\nfunction PlanetsData(){\n  \n  const planet_array = [];\n  const pageID = useParams();\n  const planet = {};\n  Worlds.map = planet_array;\n  //for(let id of Object.keys(Person)){\n    //people_array.push(<li key = {id}>{Person[id]}</li>)\n  //}\n  if(pageID.id in Worlds[pageID.id]){\n    planet = Worlds[pageID.id];\n  }\n\n  return(\n      <div>\n          <h1>{Worlds[pageID.id].name}</h1>\n          <p>Rotation Period: {Worlds[pageID.id].rotation_period}</p>\n          <p>Orbital Period: {Worlds[pageID.id].orbital_period}</p>\n          <p>Diameter: {Worlds[pageID.id].diameter}</p>\n          <p>Climate: {Worlds[pageID.id].climate}</p>\n          <p>Gravity: {Worlds[pageID.id].gravity}</p>\n          <p>Terrain: {Worlds[pageID.id].terrain}</p>\n          <p>Surface Water: {Worlds[pageID.id].surface_water}</p>\n          <p>Population: {Worlds[pageID.id].population}</p>\n          <p>Residents: {Worlds[pageID.id].residents.map((value) => (\n            <li key={value}><Link to ={value}>{value}</Link></li>\n          ))}</p>\n          <p>Films: {Worlds[pageID.id].films.map((value) => (\n            <li key={value}><Link to ={value}>{value}</Link></li>\n          ))}</p>\n      </div>\n  );\n}\nfunction FilmData(){\n\n  const films_array = [];\n  const pageID = useParams();\n  const films = {};\n  Movies.map = films_array;\n  //for(let id of Object.keys(Person)){\n    //people_array.push(<li key = {id}>{Person[id]}</li>)\n  //}\n  if(pageID.id in Movies[pageID.id]){\n    films = Movies[pageID.id];\n  }\n\n  return(\n    <div>\n    <h1>{Movies[pageID.id].title}</h1>\n    <p>Episode id: {Movies[pageID.id].episode_id}</p>\n    <p>Opening Crawl: {Movies[pageID.id].opening_crawl}</p>\n    <p>Director: {Movies[pageID.id].director}</p>\n    <p>Producer: {Movies[pageID.id].producer}</p>\n    <p>Release Date: {Movies[pageID.id].release_date}</p>\n    <p>Characters: {Movies[pageID.id].characters.map((value) => (\n      <li key={value}><Link to ={value}>{value}</Link></li>\n    ))}</p>\n    <p>Planets: {Movies[pageID.id].planets.map((value) => (\n      <li key={value}><Link to ={value}>{value}</Link></li>\n    ))}</p>\n</div>\n  );\n}\nfunction Nav(){\n  return(\n    <div>\n      <Link to=\"/\">Star Wars Home</Link>\n      <Link to=\"/people\">People</Link>\n      <Link to=\"/films\">Films</Link>\n      <Link to=\"/planets\">Planets</Link>\n    </div>\n  );\n}\n\nfunction Error(){\n  return(\n    <div>\n      <h1>This link does not exist, please hit back or choose from one of the options of the navbar</h1>\n    </div>\n  )\n}\n\nfunction SideNav(){\n  const people_array = [];\n  const planet_array = [];\n  const films_array = [];\n  const pageID = useParams();\n  \n\n  if(<Route path =\"/people\"/>){\n\n\n    return(\n        <div>\n            {Object.entries(Person).map(([key, value]) => (\n              <li key={key}><Link to ={value.url}>{value.name}</Link></li>\n            ))}\n        </div>\n    )\n  }\n\n  return(\n    <div>\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}